diff --git a/node_modules/@ecl/builder/bin/build.js b/node_modules/@ecl/builder/bin/build.js
index c2aaaae..3967914 100755
--- a/node_modules/@ecl/builder/bin/build.js
+++ b/node_modules/@ecl/builder/bin/build.js
@@ -57,12 +57,12 @@ program
   });
 
 program
-  .command('copy')
-  .description('copy static files')
+  .command("copy")
+  .description("copy static files")
   .action(() => {
     const config = loadConfig(program.config);
     config.copy.forEach((conf) =>
-      copyFiles(conf.patterns || '**', conf.from, conf.to)
+      copyFiles(conf.from || "**", conf.to, conf.options)
     );
   });
 
diff --git a/node_modules/@ecl/builder/scripts/copy.js b/node_modules/@ecl/builder/scripts/copy.js
index 30019d2..8fd8607 100644
--- a/node_modules/@ecl/builder/scripts/copy.js
+++ b/node_modules/@ecl/builder/scripts/copy.js
@@ -1,21 +1,29 @@
-const fs = require('fs');
-const path = require('path');
-const { promisify } = require('util');
-const { ncp } = require('ncp');
-const globby = require('globby');
+/**
+ * Copy files.
+ *
+ * @param {string} from - Path to a folder or file.
+ * @param {string} to - String to prefix, suffix or replace the current file name.
+ * @param {object} options - Object
+ *
+ * Example config object: {
+ *  copy: [
+ *   {
+ *     from: [path.resolve(nodeModules, "myfile.js")],
+ *     to: path.resolve(outputFolder, "js"),
+ *     options: { up: true },
+ *   },
+ * ],
+ */
 
-const copy = promisify(ncp);
+const fs = require("fs");
+const path = require("path");
+const copy = require("copyfiles");
 
-module.exports = (patterns, from, to) => {
+module.exports = (from, to, options) => {
   const executor = async () => {
-    const paths = await globby(patterns, { nodir: true, cwd: from });
-
-    paths.map(async (file) => {
-      const input = path.resolve(from, file);
-      const dest = path.resolve(to, file);
-
-      fs.mkdirSync(path.dirname(dest), { recursive: true });
-      await copy(input, dest);
+    from.push(to);
+    await copy(from, options, function (err) {
+      if (err) console.error(err);
     });
   };
 
