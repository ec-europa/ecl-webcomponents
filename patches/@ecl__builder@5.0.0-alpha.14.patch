diff --git a/bin/build.js b/bin/build.js
index 70236732047c427ba29b33a0b58ea304571486ce..de79e54aa799c758a9a3926e51a58707ee6cc1bc 100755
--- a/bin/build.js
+++ b/bin/build.js
@@ -62,7 +62,7 @@ program
   .action(() => {
     const config = loadConfig(program.config);
     config.copy.forEach((conf) =>
-      copyFiles(conf.patterns || '**', conf.from, conf.to),
+      copyFiles(conf.from || "**", conf.to, conf.options),
     );
   });
 
diff --git a/scripts/copy.js b/scripts/copy.js
index 30019d299cb537e67d28a7a85f5fd23654a90e56..b34bcc462801e5f0e63e244733e16db33e51afd7 100644
--- a/scripts/copy.js
+++ b/scripts/copy.js
@@ -1,22 +1,30 @@
-const fs = require('fs');
-const path = require('path');
-const { promisify } = require('util');
-const { ncp } = require('ncp');
-const globby = require('globby');
+/**
+ * Copy files.
+ *
+ * @param {string} from - Path to a folder or file.
+ * @param {string} to - String to prefix, suffix or replace the current file name.
+ * @param {object} options - Object
+ *
+ * Example config object: {
+ *  copy: [
+ *   {
+ *     from: [path.resolve(nodeModules, "myfile.js")],
+ *     to: path.resolve(outputFolder, "js"),
+ *     options: { up: true },
+ *   },
+ * ],
+*/
 
-const copy = promisify(ncp);
+const fs = require("fs");
+const path = require("path");
+const copy = require("copyfiles");
 
-module.exports = (patterns, from, to) => {
+module.exports = (from, to, options) => {
   const executor = async () => {
-    const paths = await globby(patterns, { nodir: true, cwd: from });
-
-    paths.map(async (file) => {
-      const input = path.resolve(from, file);
-      const dest = path.resolve(to, file);
-
-      fs.mkdirSync(path.dirname(dest), { recursive: true });
-      await copy(input, dest);
-    });
+    from.push(to);
+    await copy(from, options, function (err) {
+      if (err) console.error(err);
+    })
   };
 
   executor();
